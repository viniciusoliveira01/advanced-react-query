{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useState, useCallback } from 'react';\nimport { useQuery } from 'react-query';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { filterByTreatment } from '../utils';\n\nasync function getStaff() {\n  const {\n    data\n  } = await axiosInstance.get('/staff');\n  return data;\n}\n\nexport function useStaff() {\n  _s();\n\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all');\n  const filterStaffByTreatment = useCallback(unfilteredStaff => filterByTreatment(unfilteredStaff, filter), [filter]);\n  const {\n    data: staff = []\n  } = useQuery(queryKeys.staff, getStaff, {\n    select: filter !== 'all' ? filterStaffByTreatment : undefined\n  });\n  return {\n    staff,\n    filter,\n    setFilter\n  };\n}\n\n_s(useStaff, \"2pjI7FG1HoCpwsaPB8Hb42XVeuc=\", false, function () {\n  return [useQuery];\n});","map":{"version":3,"sources":["/Users/viniciusalexandre/Documents/development/udemy-REACT-QUERY/base-lazy-days/client/src/components/staff/hooks/useStaff.ts"],"names":["useState","useCallback","useQuery","axiosInstance","queryKeys","filterByTreatment","getStaff","data","get","useStaff","filter","setFilter","filterStaffByTreatment","unfilteredStaff","staff","select","undefined"],"mappings":";;AAAA,SAAmCA,QAAnC,EAA6CC,WAA7C,QAAgE,OAAhE;AACA,SAASC,QAAT,QAAyB,aAAzB;AAGA,SAASC,aAAT,QAA8B,wBAA9B;AACA,SAASC,SAAT,QAA0B,gCAA1B;AACA,SAASC,iBAAT,QAAkC,UAAlC;;AAEA,eAAeC,QAAf,GAA4C;AAC1C,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAMJ,aAAa,CAACK,GAAd,CAAkB,QAAlB,CAAvB;AACA,SAAOD,IAAP;AACD;;AAQD,OAAO,SAASE,QAAT,GAA8B;AAAA;;AACnC;AACA,QAAM,CAACC,MAAD,EAASC,SAAT,IAAsBX,QAAQ,CAAC,KAAD,CAApC;AAEA,QAAMY,sBAAsB,GAAGX,WAAW,CACvCY,eAAD,IAAqBR,iBAAiB,CAACQ,eAAD,EAAkBH,MAAlB,CADE,EAExC,CAACA,MAAD,CAFwC,CAA1C;AAKA,QAAM;AAAEH,IAAAA,IAAI,EAAEO,KAAK,GAAG;AAAhB,MAAuBZ,QAAQ,CAACE,SAAS,CAACU,KAAX,EAAkBR,QAAlB,EAA4B;AAC/DS,IAAAA,MAAM,EAAEL,MAAM,KAAK,KAAX,GAAmBE,sBAAnB,GAA4CI;AADW,GAA5B,CAArC;AAIA,SAAO;AAAEF,IAAAA,KAAF;AAASJ,IAAAA,MAAT;AAAiBC,IAAAA;AAAjB,GAAP;AACD;;GAdeF,Q;UASeP,Q","sourcesContent":["import { Dispatch, SetStateAction, useState, useCallback } from 'react';\nimport { useQuery } from 'react-query';\n\nimport type { Staff } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { filterByTreatment } from '../utils';\n\nasync function getStaff(): Promise<Staff[]> {\n  const { data } = await axiosInstance.get('/staff');\n  return data;\n}\n\ninterface UseStaff {\n  staff: Staff[];\n  filter: string;\n  setFilter: Dispatch<SetStateAction<string>>;\n}\n\nexport function useStaff(): UseStaff {\n  // for filtering staff by treatment\n  const [filter, setFilter] = useState('all');\n\n  const filterStaffByTreatment = useCallback(\n    (unfilteredStaff) => filterByTreatment(unfilteredStaff, filter),\n    [filter],\n  );\n\n  const { data: staff = [] } = useQuery(queryKeys.staff, getStaff, {\n    select: filter !== 'all' ? filterStaffByTreatment : undefined,\n  });\n\n  return { staff, filter, setFilter };\n}\n"]},"metadata":{},"sourceType":"module"}