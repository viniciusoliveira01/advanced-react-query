{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useQuery } from 'react-query';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { useUser } from './useUser'; // for when we need a query function for useQuery\n\nasync function getUserAppointments(user) {\n  if (!user) return null;\n  const {\n    data\n  } = await axiosInstance.get(`/user/${user.id}/appointments`, {\n    headers: getJWTHeader(user)\n  });\n  return data.appointments;\n}\n\nexport function useUserAppointments() {\n  _s();\n\n  const {\n    user\n  } = useUser();\n  const {\n    data: userAppointments = []\n  } = useQuery('user-appointments', () => getUserAppointments(user));\n  return userAppointments;\n}\n\n_s(useUserAppointments, \"yWHskApGNI+O/3XLjmInjzkTJQs=\", false, function () {\n  return [useUser, useQuery];\n});","map":{"version":3,"sources":["/Users/viniciusalexandre/Documents/development/udemy-REACT-QUERY/base-lazy-days/client/src/components/user/hooks/useUserAppointments.ts"],"names":["useQuery","axiosInstance","getJWTHeader","useUser","getUserAppointments","user","data","get","id","headers","appointments","useUserAppointments","userAppointments"],"mappings":";;AACA,SAASA,QAAT,QAAyB,aAAzB;AAGA,SAASC,aAAT,EAAwBC,YAAxB,QAA4C,wBAA5C;AAEA,SAASC,OAAT,QAAwB,WAAxB,C,CAEA;;AACA,eAAeC,mBAAf,CACEC,IADF,EAEiC;AAC/B,MAAI,CAACA,IAAL,EAAW,OAAO,IAAP;AACX,QAAM;AAAEC,IAAAA;AAAF,MAAW,MAAML,aAAa,CAACM,GAAd,CAAmB,SAAQF,IAAI,CAACG,EAAG,eAAnC,EAAmD;AACxEC,IAAAA,OAAO,EAAEP,YAAY,CAACG,IAAD;AADmD,GAAnD,CAAvB;AAGA,SAAOC,IAAI,CAACI,YAAZ;AACD;;AAED,OAAO,SAASC,mBAAT,GAA8C;AAAA;;AACnD,QAAM;AAAEN,IAAAA;AAAF,MAAWF,OAAO,EAAxB;AACA,QAAM;AAAEG,IAAAA,IAAI,EAAEM,gBAAgB,GAAG;AAA3B,MAAkCZ,QAAQ,CAAC,mBAAD,EAAsB,MACpEI,mBAAmB,CAACC,IAAD,CAD2B,CAAhD;AAGA,SAAOO,gBAAP;AACD;;GANeD,mB;UACGR,O,EACuBH,Q","sourcesContent":["import dayjs from 'dayjs';\nimport { useQuery } from 'react-query';\n\nimport type { Appointment, User } from '../../../../../shared/types';\nimport { axiosInstance, getJWTHeader } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useUser } from './useUser';\n\n// for when we need a query function for useQuery\nasync function getUserAppointments(\n  user: User | null,\n): Promise<Appointment[] | null> {\n  if (!user) return null;\n  const { data } = await axiosInstance.get(`/user/${user.id}/appointments`, {\n    headers: getJWTHeader(user),\n  });\n  return data.appointments;\n}\n\nexport function useUserAppointments(): Appointment[] {\n  const { user } = useUser();\n  const { data: userAppointments = [] } = useQuery('user-appointments', () =>\n    getUserAppointments(user),\n  );\n  return userAppointments;\n}\n"]},"metadata":{},"sourceType":"module"}