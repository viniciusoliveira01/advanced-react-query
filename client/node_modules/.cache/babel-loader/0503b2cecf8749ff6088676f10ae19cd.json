{"ast":null,"code":"import { QueryClient } from 'react-query';\nimport { createStandaloneToast } from '@chakra-ui/react';\nimport { theme } from '../theme';\nconst toast = createStandaloneToast({\n  theme\n});\n\nfunction queryErrorHandler(error) {\n  // error is type unknown because in js, anything can be an error (e.g. throw(5))\n  const id = 'react-query-error';\n  const title = error instanceof Error ? error.message : 'error connecting to server'; // prevent duplicate toasts\n\n  toast.closeAll();\n  toast({\n    id,\n    title,\n    status: 'error',\n    variant: 'subtle',\n    isClosable: true\n  });\n}\n\nexport function generateQueryClient() {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        onError: queryErrorHandler,\n        staleTime: 600000,\n        cacheTime: 900000,\n        refetchOnMount: true,\n        refetchOnWindowFocus: false,\n        refetchOnReconnect: false\n      }\n    }\n  });\n}\nexport const queryClient = generateQueryClient();","map":{"version":3,"sources":["/Users/viniciusalexandre/Documents/development/udemy-REACT-QUERY/base-lazy-days/client/src/react-query/queryClient.ts"],"names":["QueryClient","createStandaloneToast","theme","toast","queryErrorHandler","error","id","title","Error","message","closeAll","status","variant","isClosable","generateQueryClient","defaultOptions","queries","onError","staleTime","cacheTime","refetchOnMount","refetchOnWindowFocus","refetchOnReconnect","queryClient"],"mappings":"AAAA,SAASA,WAAT,QAA4B,aAA5B;AAEA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAASC,KAAT,QAAsB,UAAtB;AAEA,MAAMC,KAAK,GAAGF,qBAAqB,CAAC;AAAEC,EAAAA;AAAF,CAAD,CAAnC;;AAEA,SAASE,iBAAT,CAA2BC,KAA3B,EAAiD;AAC/C;AACA,QAAMC,EAAE,GAAG,mBAAX;AACA,QAAMC,KAAK,GACTF,KAAK,YAAYG,KAAjB,GAAyBH,KAAK,CAACI,OAA/B,GAAyC,4BAD3C,CAH+C,CAM/C;;AACAN,EAAAA,KAAK,CAACO,QAAN;AACAP,EAAAA,KAAK,CAAC;AAAEG,IAAAA,EAAF;AAAMC,IAAAA,KAAN;AAAaI,IAAAA,MAAM,EAAE,OAArB;AAA8BC,IAAAA,OAAO,EAAE,QAAvC;AAAiDC,IAAAA,UAAU,EAAE;AAA7D,GAAD,CAAL;AACD;;AAED,OAAO,SAASC,mBAAT,GAA4C;AACjD,SAAO,IAAId,WAAJ,CAAgB;AACrBe,IAAAA,cAAc,EAAE;AACdC,MAAAA,OAAO,EAAE;AACPC,QAAAA,OAAO,EAAEb,iBADF;AAEPc,QAAAA,SAAS,EAAE,MAFJ;AAGPC,QAAAA,SAAS,EAAE,MAHJ;AAIPC,QAAAA,cAAc,EAAE,IAJT;AAKPC,QAAAA,oBAAoB,EAAE,KALf;AAMPC,QAAAA,kBAAkB,EAAE;AANb;AADK;AADK,GAAhB,CAAP;AAYD;AAED,OAAO,MAAMC,WAAW,GAAGT,mBAAmB,EAAvC","sourcesContent":["import { QueryClient } from 'react-query';\n\nimport { createStandaloneToast } from '@chakra-ui/react';\nimport { theme } from '../theme';\n\nconst toast = createStandaloneToast({ theme });\n\nfunction queryErrorHandler(error: unknown): void {\n  // error is type unknown because in js, anything can be an error (e.g. throw(5))\n  const id = 'react-query-error';\n  const title =\n    error instanceof Error ? error.message : 'error connecting to server';\n\n  // prevent duplicate toasts\n  toast.closeAll();\n  toast({ id, title, status: 'error', variant: 'subtle', isClosable: true });\n}\n\nexport function generateQueryClient(): QueryClient {\n  return new QueryClient({\n    defaultOptions: {\n      queries: {\n        onError: queryErrorHandler,\n        staleTime: 600000,\n        cacheTime: 900000,\n        refetchOnMount: true,\n        refetchOnWindowFocus: false,\n        refetchOnReconnect: false,\n      },\n    },\n  });\n}\n\nexport const queryClient = generateQueryClient();\n"]},"metadata":{},"sourceType":"module"}