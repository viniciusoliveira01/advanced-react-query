{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { axiosInstance } from '../../../axiosInstance';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\nasync function removeAppointmentUser(appointment) {\n  const patchData = [{\n    op: 'remove',\n    path: '/userId'\n  }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData\n  });\n}\n\nexport function useCancelAppointment() {\n  _s();\n\n  const queryClient = useQueryClient();\n  const toast = useCustomToast();\n  return appointment => {// nothing to see here\n  };\n}\n\n_s(useCancelAppointment, \"Uhw1+UcXmohz3YxRVmV6s+Rb+uY=\", true, function () {\n  return [useCustomToast];\n});","map":{"version":3,"sources":["/Users/viniciusalexandre/Documents/development/udemy-REACT-QUERY/base-lazy-days/client/src/components/appointments/hooks/useCancelAppointment.ts"],"names":["axiosInstance","useCustomToast","removeAppointmentUser","appointment","patchData","op","path","patch","id","data","useCancelAppointment","queryClient","useQueryClient","toast"],"mappings":";;AACA,SAASA,aAAT,QAA8B,wBAA9B;AAEA,SAASC,cAAT,QAA+B,gCAA/B;;AAEA,eAAeC,qBAAf,CAAqCC,WAArC,EAA8E;AAC5E,QAAMC,SAAS,GAAG,CAAC;AAAEC,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GAAD,CAAlB;AACA,QAAMN,aAAa,CAACO,KAAd,CAAqB,gBAAeJ,WAAW,CAACK,EAAG,EAAnD,EAAsD;AAC1DC,IAAAA,IAAI,EAAEL;AADoD,GAAtD,CAAN;AAGD;;AAED,OAAO,SAASM,oBAAT,GAAoE;AAAA;;AACzE,QAAMC,WAAW,GAAGC,cAAc,EAAlC;AACA,QAAMC,KAAK,GAAGZ,cAAc,EAA5B;AAEA,SAAQE,WAAD,IAA8B,CACnC;AACD,GAFD;AAGD;;GAPeO,oB;UAEAT,c","sourcesContent":["import { Appointment } from '../../../../../shared/types';\nimport { axiosInstance } from '../../../axiosInstance';\nimport { queryKeys } from '../../../react-query/constants';\nimport { useCustomToast } from '../../app/hooks/useCustomToast';\n\nasync function removeAppointmentUser(appointment: Appointment): Promise<void> {\n  const patchData = [{ op: 'remove', path: '/userId' }];\n  await axiosInstance.patch(`/appointment/${appointment.id}`, {\n    data: patchData,\n  });\n}\n\nexport function useCancelAppointment(): (appointment: Appointment) => void {\n  const queryClient = useQueryClient();\n  const toast = useCustomToast();\n\n  return (appointment: Appointment) => {\n    // nothing to see here\n  };\n}\n"]},"metadata":{},"sourceType":"module"}